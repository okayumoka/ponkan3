# セーブ画面
*save_start
;tempsave num: 0
;historyopt enabled: false
;screenshot
;backlay

---
tv.save = {
  // 背景画像
  bg: "image/save.png",

  // ボタン用レイヤ
  btnLay: tv.layer.save + 1,
  // テキスト用レイヤ
  textLay: tv.layer.save + 2,
  // ダイアログ用レイヤ
  dialogLay: tv.layer.save+ 3,
};
tv.transTime = 200;
tv.savePageNum = 0;
---

#=========================================================================================
# 描画処理
#=========================================================================================
*draw

;currentpage page: "back"

# 背景の設定
;image {
  lay: "&tv.layer.save",
  file: "&tv.save.bg",
  visible: false,
  x: 0,
  y: 0
}
;layopt lay: "&tv.layer.save", visible: true

# ボタン用レイヤの設定
;layopt lay: "&tv.save.btnLay", x: 0, y: 0, width: 1280, height: 720, visible: true
;mesopt lay: "&tv.save.btnLay", color: 0x000000
;clearbuttons lay: "&tv.save.btnLay"

# テキスト用レイヤの設定
;layopt lay: "&tv.save.textLay", x:0, y: 0, width: 1280, height: 720, visible: true
;meslay lay: "&tv.save.textLay"
;clear lay: "&tv.save.textLay"
;mesopt {
  fontfamily: ["mplus-1p-regular", "monospace"],
  fontsize: 18,
  lineheight: 18,
  align: "left",
  color: 0x000000,
  autoreturn: false,
  margint: 0, marginr: 0, marginb: 0, marginl: 0
}

# ボタンをロック
;lockbuttons page: "fore"
;lockbuttons page: "back"
# システムボタンをロック
;locksystembuttons page: "fore"
;locksystembuttons page: "back"

# セーブボタンの設置
;nowait
;for loops: 6, indexvar: "i"
  ---
  tv.pos = [
    [60, 140], [670, 140],
    [60, 315], [670, 315],
    [60, 490], [670, 490],
  ];
  tv.x = tv.pos[tv.i][0];
  tv.y = tv.pos[tv.i][1];
  tv.saveNum = (tv.savePageNum * 6) + tv.i;
  tv.saveInfo = ponkan.getSaveDataInfo(tv.saveNum);
  tv.text = tv.saveInfo.text.replace(/\n/, "");
  if (tv.text.length > 42) {
    tv.text = tv.text.substring(0, 42) + "...";
  }
  tv.lineList = ponkan.splitStrByLength(tv.text, 15);
  if (tv.lineList[0] == null) { tv.lineList[0] = ""; }
  if (tv.lineList[1] == null) { tv.lineList[1] = ""; }
  if (tv.lineList[2] == null) { tv.lineList[2] = ""; }
  tv.exp = "tv.clickedSaveNum = " + tv.saveNum + ";";
  tv.deleteExp = "tv.clickedDeleteNum = " + tv.saveNum + ";";
  ---
  ;textbutton {
    lay:    "&tv.save.btnLay",
    text:   "",
    x:      "&tv.x",
    y:      "&tv.y",
    width:  550,
    height: 150,
    bgcolors: ["0xFFFFFF", "0xFFFFFF", "0xFFFFFF"],
    bgalphas: [0.75, 0.85, 0.9],
    exp:    "&tv.exp",
    jump:   true,
    label:  "on_click_save_button"
  }
  ;childimage {
    lay:  "&tv.save.btnLay",
    file: "&tv.saveInfo.screenShot",
    x:    "&tv.x + 10",
    y:    "&tv.y + 10",
    alpha: 1
  }
  ;mesopt fontsize: 14, lineheight: 14, color: 0x000000
  ;locate x: "&tv.x + 251", y: "&tv.y + 10"
  = "No." + (tv.saveNum + 1)
  ;locate x: "&tv.x + 251 + 50", y: "&tv.y + 10"
  = tv.saveInfo.date
  ;mesopt fontsize: 16, lineheight: 16, color: 0x000000
  ;locate x: "&tv.x + 251", y: "&tv.y + 44"
  = tv.saveInfo.comment
  ;locate x: "&tv.x + 251", y: "&tv.y + 78"
  = tv.lineList[0]
  ;locate x: "&tv.x + 251", y: "&tv.y + 78 + 22"
  = tv.lineList[1]
  ;locate x: "&tv.x + 251", y: "&tv.y + 78 + 22 + 22"
  = tv.lineList[2]
  ;if exp: "ponkan.existSaveData(tv.saveNum)"
    ;imagebutton {
      lay:       "&tv.save.btnLay",
      imagefile: "image/close_button_small.png",
      x:         "&tv.x + (550 - 25)",
      y:         "&tv.y + 10",
      exp:       "&tv.deleteExp",
      jump:      true,
      label:     "on_click_delete_button"
    }
  ;endif
;endfor
;endnowait

# ページ送りボタン
---
tv.pageButtonX = 700;
tv.pageButtonY = 20;
---
;mesopt {
  fontsize: 24, lineheight: 24, color: 0xFFFFFF,
  margint: 0, marginr: 0, marginb: 0, marginl: 0
}
;locate x: "&tv.pageButtonX", y: "&tv.pageButtonY"
;nowait
PAGE:
;for loops: 10, indexvar: "i"
  ---
  tv.x = tv.pageButtonX + 80 + (tv.i * 40);
  tv.y = tv.pageButtonY;
  tv.exp = "tv.clickedPageNum = " + tv.i + ";";
  if (tv.i == tv.savePageNum) {
    tv.bgalphas = [1, 1, 1];
  } else {
    tv.bgalphas = [0.50, 0.85, 0.9];
  }
  console.log("@@@@", tv.bgalphas);
  ---
  ;textbutton {
    lay:    "&tv.save.btnLay",
    text:   "&'' + (tv.i + 1)",
    x:      "&tv.x",
    y:      "&tv.y",
    width:  30,
    height: 30,
    bgcolors: ["0xFFFFFF", "0xFFFFFF", "0xFFFFFF"],
    bgalphas: "&tv.bgalphas",
    exp:    "&tv.exp",
    jump:   true,
    label:  "on_click_page_button"
  }
;endfor
;endnowait

# セーブ画面の閉じるボタン
;imagebutton {
  lay:       "&tv.save.btnLay",
  imagefile: "image/close_button.png",
  x:         "&1280 - 30 - 24",
  y:         23,
  jump:      true,
  label:     "exit"
}


# トランジションで表示
;trans method: "crossfade", time: "&tv.transTime"
;waittrans canskip: false

*unlock_save_buttons
# セーブのボタンのロックを解除
;unlockbuttons lay: "&tv.save.btnLay"
# 右クリックで画面を終了
;rclick jump: true, label: "exit", enable: true
;s



#=========================================================================================
# ページ切り替え
#=========================================================================================
*on_click_page_button
-tv.transTime = 100;
;if exp: "tv.savePageNum == tv.clickedPageNum"
  ;jump label: "stop"
;else
  -tv.savePageNum = tv.clickedPageNum;
  ;jump label: "draw"
;end
;s


#=========================================================================================
# セーブする
#=========================================================================================
*on_click_save_button
-tv.dialogMessage = "No." + (tv.clickedSaveNum + 1) + " にセーブしますか？";
;call label: "show_dialog"
;if exp: "tv.dialogResult"
  ;save num: "&tv.clickedSaveNum"
  -tv.transTime = 100;
  ;jump label: "draw"
;else
  ;jump label: "unlock_save_buttons"
;end
;s


#=========================================================================================
# 削除する
#=========================================================================================
*on_click_delete_button
-tv.dialogMessage = "No." + (tv.clickedDeleteNum + 1) + " のセーブデータを削除しますか？";
;call label: "show_dialog"
;if exp: "tv.dialogResult"
  ;deletesavedata num: "&tv.clickedDeleteNum"
  -tv.transTime = 100;
  ;jump label: "draw"
;else
  ;jump label: "unlock_save_buttons"
;end
;s


#=========================================================================================
# ダイアログを表示する
#=========================================================================================
*show_dialog
;lockbuttons lay: "&tv.save.btnLay", page: "fore"
;clear lay: "&tv.save.dialogLay"
;clearbuttons lay: "&tv.save.dialogLay"
;image {
  lay:      "&tv.save.dialogLay",
  file:     "image/dialog.png",
  x:        (1280 - 500) / 2,
  y:        (720 - 250) / 2,
}
;mesopt {
  lay:      "&tv.save.dialogLay",
  color:    0x000000,
  align: "center",
  fontsize: 24
}
;textbutton {
  lay:      "&tv.save.dialogLay",
  text:     "OK",
  width:    250,
  height:   50,
  x:        0,
  y:        200,
  bgcolors: [0, 0, 0],
  bgalphas: [0.1, 0, 0],
  margint:  10,
  exp:      "tv.dialogResult = true",
  jump:     true,
  label:    "dialog_return",
}
;textbutton {
  lay:      "&tv.save.dialogLay",
  text:     "キャンセル",
  width:    250,
  height:   50,
  x:        250,
  y:        200,
  bgcolors: [0, 0, 0],
  bgalphas: [0.1, 0, 0],
  margint:  10,
  exp:      "tv.dialogResult = false",
  jump:     true,
  label:    "dialog_return",
}
;nowait
;locate lay: "&tv.save.dialogLay", y: 70
;ch lay: "&tv.save.dialogLay", text: "&tv.dialogMessage"
;endnowait
;layopt lay: "&tv.save.dialogLay", visible: true
;unlockbuttons lay: "&tv.save.dialogLay"
;s

*dialog_return
;lockbuttons lay: "&tv.save.dialogLay"
;unlockbuttons lay: "&tv.save.btnLay"
;layopt lay: "&tv.save.dialogLay", visible: false
;return
# ;jump label: "&tv.dialogReturnLabel"
;s


#=========================================================================================
# セーブ画面を終わる
#=========================================================================================
*exit
;tempload num: 0, sound: false, toback: true
;trans method: "crossfade", time: 200
;historyopt enabled: true
;return

